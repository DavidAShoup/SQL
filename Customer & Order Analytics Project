-- In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

-- How many orders were placed in January?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

-- How many of those orders were for an iPhone?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE Product='iPhone'
AND length(orderid) = 6
AND orderid <> 'Order ID';

-- Select the customer account numbers for all the orders that were placed in February.
SELECT DISTINCT acctnum
FROM BIT_DB.customers
INNER JOIN BIT_DB.FebSales
ON BIT_DB.customers.order_id = BIT_DB.FebSales.orderID
WHERE length(order_id) = 6
AND order_id <> 'Order ID';

--Which product was the cheapest one sold in January, and what was the price?
SELECT DISTINCT Product, Price
FROM BIT_DB.JanSales
WHERE price IN (SELECT MIN(price) FROM BIT_DB.JanSales);

--What is the total revenue for each product sold in January?
SELECT ROUND(sum(quantity)*price, 2) as revenue, product
FROM BIT_DB.JanSales
GROUP BY product;

-- Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT SUM(Quantity), Product, ROUND(sum(quantity)*price, 2) as Revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;

-- How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT count(distinct cust.acctnum), AVG(Feb.Quantity*Feb.price)
FROM BIT_DB.FebSales AS Feb
LEFT JOIN BIT_DB.customers as cust on Feb.orderID = cust.order_id
WHERE Quantity > 2
AND length(orderid) = 6
AND orderid <> 'Order ID';

-- List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product;
